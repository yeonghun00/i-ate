rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // =======================================================
    // CORRECTED RULES MATCHING ACTUAL APP DATA STRUCTURE
    // =======================================================
    
    // Helper function to check if user is family member
    function isFamilyMember(familyId) {
      return request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.members;
    }
    
    // Users can only access their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Connection codes - needed for family joining and lookup
    match /connection_codes/{codeId} {
      // Allow authenticated users to read and create connection codes
      allow read, create: if request.auth != null;
      
      // No updates or deletes to maintain data integrity
      allow update, delete: if false;
    }

    // Families - core family data with CORRECTED field validation
    match /families/{familyId} {
      // Allow creation if user is authenticated and adds themselves to 'members' array
      allow create: if request.auth != null && 
        request.resource.data.keys().hasAll(['familyId', 'connectionCode', 'elderlyName', 'members', 'createdBy']) &&
        request.auth.uid == request.resource.data.createdBy &&
        request.auth.uid in request.resource.data.members;
      
      // Allow read if user is a family member (using 'members' field)
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Allow updates if user is a family member
      allow update: if request.auth != null && 
        (request.auth.uid in resource.data.members ||
         // Allow child app to join by adding themselves to members
         (request.auth.uid in request.resource.data.members &&
          !request.auth.uid in resource.data.members &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members', 'approved', 'approvedAt'])));
      
      // Allow list operation for authenticated users (needed for auto-detection and queries)
      allow list: if request.auth != null;
      
      // Only family creator can delete
      allow delete: if request.auth != null && 
        resource.data.createdBy == request.auth.uid;

      // Subcollections - only family members can access
      match /{subcollection}/{document=**} {
        allow read, write: if isFamilyMember(familyId);
      }
    }

    // Supporting collections
    match /fcmTokens/{tokenId} {
      allow read, write: if request.auth != null;
    }

    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /analytics/{document=**} {
      allow read, write: if request.auth != null;
    }

    match /appSettings/{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    match /test/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}