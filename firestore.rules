rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is family owner
    function isFamilyOwner(familyId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/families/$(familyId)) &&
             get(/databases/$(database)/documents/families/$(familyId)).data.createdBy == request.auth.uid;
    }

    // Helper function to check if user is in family member list
    function isInMembersList(familyId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/families/$(familyId)) &&
             request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.get('memberIds', []);
    }

    // Helper function for family access
    function hasAccessToFamily(familyId) {
      return request.auth != null && (
        // Allow during family creation (before document exists)
        !exists(/databases/$(database)/documents/families/$(familyId)) ||
        // Allow if user is owner or member
        (isFamilyOwner(familyId) || isInMembersList(familyId))
      );
    }

    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Families collection - SECURE access control
    match /families/{familyId} {
      // Allow any authenticated user to read for connection code checking and family access
      allow read: if request.auth != null;
      // Only allow write if user has access to this specific family
      allow write: if hasAccessToFamily(familyId);

      // Meals subcollection - restricted to family members only
      match /meals/{mealId} {
        allow read, write: if hasAccessToFamily(familyId);
      }

      // Recordings subcollection - restricted to family members only
      match /recordings/{recordingId} {
        allow read, write: if hasAccessToFamily(familyId);
      }

      // Location data subcollection - restricted to family members only
      match /locations/{locationId} {
        allow read, write: if hasAccessToFamily(familyId);
      }

      // Child devices subcollection - restricted to family members only
      match /child_devices/{deviceId} {
        allow read, write: if hasAccessToFamily(familyId);
      }
      
      // Allow family owners to query child_devices subcollection (even when empty)
      match /child_devices {
        allow read: if hasAccessToFamily(familyId);
      }

      // Any other subcollections - restricted to family members only
      match /{subcollection=**} {
        allow read, write: if hasAccessToFamily(familyId);
      }
    }

    // Test collection for connectivity testing
    match /test/{document=**} {
      allow read, write: if request.auth != null;
    }

    // FCM tokens collection for notifications
    match /fcmTokens/{tokenId} {
      allow read, write: if request.auth != null;
    }

    // Subscriptions collection - users can only access their own subscription
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // App analytics and logs - write-only for users
    match /analytics/{document=**} {
      allow write: if request.auth != null;
      allow read: if false; // Only admin tools can read
    }

    // Global app settings (read-only for users)
    match /appSettings/{document=**} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can write
    }
  }
}